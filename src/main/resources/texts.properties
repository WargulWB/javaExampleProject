# TEXT ENCODING: ISO-8859-1 [DO NOT CHANGE THE ENCODING]
title= Java Examples Project

#main frame related
mainFrame.arguments=Arguments:
mainFrame.run=Run
mainFrame.overview=Overview
mainFrame.output=Output
mainFrame.description=Description
mainFrame.relevantPackages=Relevant Packages:
mainFrame.relevantClasses=Relevant Classes:
mainFrame.descriptionLabel=Description:

#example types
exampleType.patterns=Patterns

#examples
example.log.noArgumentsRequired=This example requires no arguments.
example.singletonPattern=Singleton Pattern
example.factoryPattern=Factory Pattern
example.builderPattern=Builder Pattern
example.builderPattern.description=The idea behind this implementation is to add an internal Builder-class to a class (likely to be a model class) \
 which can be used to construct a new instance of the class rather than using a class constructor. The benefit of this is, classes which have a \
 large set of parameters would have a large/unreadable constructor, the builder allows the settings per set-Methods which is much easier to read and to use. \
 On top of this the builder can handle any validation of parameters and can provide default value handling.\n\n\
 In this example the %1$s constructs/tries to construct multiple instances of %2$s by using %3$s. Note that the private constructors force the usage of the \
 builder and deny the possibility to use the constructors instead.
 